(function(window,$){'use strict';var baseline=(function(){var _base=0,_breakpoints={};function _setBase(element){var height=element.offsetHeight,current,old;for(var key in _breakpoints){current=key;if(document.body.clientWidth>current&&current>=old){_base=_breakpoints[key];old=current;}}
element.style.marginBottom=Math.ceil(height/_base)*_base-height+_base+'px';}
function _init(element){_setBase(element);if('addEventListener'in window){window.addEventListener('resize',function(){_setBase(element);},false);}else if('attachEvent'in window){window.attachEvent('resize',function(){_setBase(element);});}}
return function baseline(elements,options){var targets=typeof elements==='string'?document.querySelectorAll(elements):elements,len=targets.length;if(typeof options==='number'){_base=parseInt(options,10);}else if(typeof options==='object'){var em=parseInt(getComputedStyle(document.body,null).getPropertyValue('font-size'),10);for(var point in breakpoints){var unitless=/\d+em/.test(point)?parseInt(point,10)*em:/\d+px/.test(point)?parseInt(point,10):point;_breakpoints[unitless]=parseInt(breakpoints[point],10);}}
if(len>1){while(len--){_init(targets[len]);}}else{_init(targets[0]);}};}());if(typeof $!=="undefined"){$.extend($.fn,{baseline:function(options){return baseline(this,options);}});}else{window.baseline=baseline;}}(window,window.jQuery||window.Zepto||undefined));